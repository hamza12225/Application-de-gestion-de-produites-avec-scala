[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\HAMZAE~1\AppData\Local\Temp\idea1.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\HAMZAE~1\AppData\Local\Temp\idea1.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.9.8 (Oracle Corporation Java 19.0.1)
[debug] Load.defaultLoad until apply took 231.2976ms
[debug]           Load.loadUnit: plugins took 180.5548ms
[debug]           Load.loadUnit: defsScala took 0.6834ms
[debug] [Loading] Scanning directory C:\Users\Hamza Elhaiki\IdeaProjects\Gestion de stock\project
[debug]             Load.loadUnit: mkEval took 16.5997ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Hamza Elhaiki\IdeaProjects\Gestion de stock\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 27.2394 ms
[info] loading settings for project gestion-de-stock-build from idea1.sbt ...
[debug]               Load.resolveProject(gestion-de-stock-build) took 83.9756ms
[debug]             Load.loadTransitive: finalizeProject(Project(id gestion-de-stock-build, base: C:\Users\Hamza Elhaiki\IdeaProjects\Gestion de stock\project, plugins: List(<none>))) took 125.2239ms
[debug] [Loading] Done in C:\Users\Hamza Elhaiki\IdeaProjects\Gestion de stock\project, returning: (gestion-de-stock-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 6206.2111ms
[debug]           Load.loadUnit: cleanEvalClasses took 13.7142ms
[debug]         Load.loadUnit(file:/C:/Users/Hamza%20Elhaiki/IdeaProjects/Gestion%20de%20stock/project/, ...) took 6411.5927ms
[debug]       Load.apply: load took 6687.0598ms
[debug]       Load.apply: resolveProjects took 13.4153ms
[debug]       Load.apply: finalTransforms took 146.756ms
[debug]       Load.apply: config.delegates took 16.5569ms
[debug]       Load.apply: Def.make(settings)... took 791.2975ms
[debug]       Load.apply: structureIndex took 218.3277ms
[debug]       Load.apply: mkStreams took 3.9683ms
[info] loading project definition from C:\Users\Hamza Elhaiki\IdeaProjects\Gestion de stock\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 11038.0425ms
[debug]     Load.loadUnit: defsScala took 0.0051ms
[debug] [Loading] Scanning directory C:\Users\Hamza Elhaiki\IdeaProjects\Gestion de stock
[debug]       Load.loadUnit: mkEval took 0.3832ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 4.0567 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 47.5533ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\Hamza Elhaiki\IdeaProjects\Gestion de stock, plugins: List(<none>))) took 54.5957ms
[debug] [Loading] Done in C:\Users\Hamza Elhaiki\IdeaProjects\Gestion de stock, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 2368.6855ms
[debug]     Load.loadUnit: cleanEvalClasses took 23.133ms
[debug]   Load.loadUnit(file:/C:/Users/Hamza%20Elhaiki/IdeaProjects/Gestion%20de%20stock/, ...) took 13435.4941ms
[debug] Load.apply: load took 13487.6658ms
[debug] Load.apply: resolveProjects took 0.3243ms
[debug] Load.apply: finalTransforms took 38.9102ms
[debug] Load.apply: config.delegates took 0.685ms
[debug] Load.apply: Def.make(settings)... took 156.8983ms
[debug] Load.apply: structureIndex took 113.8659ms
[debug] Load.apply: mkStreams took 0.0051ms
[info] set current project to Gestion de stock (in build file:/C:/Users/Hamza%20Elhaiki/IdeaProjects/Gestion%20de%20stock/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 62341 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 62341, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to Gestion de stock (in build file:/C:/Users/Hamza%20Elhaiki/IdeaProjects/Gestion%20de%20stock/)
[debug] > Exec(idea-shell, None, None)
